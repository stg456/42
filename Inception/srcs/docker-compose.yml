version: "3"
    
services:
  mariadb:
    container_name: mariadb
    networks:
      - inception
    build: ./requirements/mariadb
    env_file:
    - ./.env
    volumes:
      - mariadb:/var/lib/mysql
    restart: unless-stopped

  nginx:
    container_name: nginx
    networks:
      - inception
    build: ./requirements/nginx
    env_file:
    - ./.env
    depends_on:
      - wordpress
    volumes:
      - wordpress:/var/www/wordpress
    ports:
      - "8080:8080" 		# on indique le port qui sera exposé a la machine locale
    restart: unless-stopped 		# Ici nous changeons, le container redémarrera uniquement en cas de crash.

  wordpress:
    container_name: wordpress
    networks:
      - inception
    build: ./requirements/wordpress
    env_file:
    - ./.env
    depends_on:    					# WordPress démarrera uniquement après MariaDB (sinon il ne pourra pas configurer la base de données...)
      - mariadb
    volumes:
      - wordpress:/var/www/wordpress
    restart: unless-stopped

volumes:
  wordpress:
    driver: local # ici nous stockons le volume en local
    driver_opts:
      type: 'none' 									# aucun type spécifique
      o: 'bind'
      device: '~/data/wordpress' 		#Ou stocker le dossier sur votre ordinateur en local
  mariadb:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'										 # Les Bind Mounts sont des volumes qui se montent sur un chemin d'accès à l'hôte, et ils peuvent être modifiés par d'autres processus en dehors de docker.
      device: '~/data/mariadb'			#Ou stocker le dossier sur votre ordinateur en local
  
networks:
  inception:
    driver: bridge

# pour build:   docker-compose -f  <path_docker_compose> -d -build
# pour l'arreter:   docker-compose -f  <path_docker_compose> stop
# pour supprimer le build:  docker-compose -f  <path_docker_compose> down -v
# pour supprimer tous les comtainer:  docker system prune -af

