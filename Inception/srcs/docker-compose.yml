version: "3"
    
services:
mariadb:
  container_name: mariadb
  networks:
  - Inception
  build:
  context: requirements/mariadb
  dockerfile: Dockerfile
  env_file: .env
  volumes:
  - mariadb:/var/lib/mysql
  restart: unless-stopped
  expose:
  - "3306"

nginx:
  container_name: nginx
  volumes:
  - wordpress:/var/www/wordpress
  networks:
  - inception
  depends_on:        	 # Nouvelle ligne, indiquant de ne pas démarrer NGINX tant que WordPress n'a pas démarré.
  - wordpress
  build: 
  context: requirements/nginx
  dockerfile: Dockerfile
  env_file: .env
  ports:
  - "443:443" 		# on indique le port qui sera exposé a la machine locale
  restart: on-failure 		# Ici nous changeons, le container redémarrera uniquement en cas de crash.

wordpress:
  container_name: wordpress
  env_file: .env
  volumes:
  - wordpress:/var/www/wordpress
  networks:
  - inception
  build: 
  context: requirements/wordpress
  dockerfile: Dockerfile
  depends_on:    					# WordPress démarrera uniquement après MariaDB (sinon il ne pourra pas configurer la base de données...)
  - mariadb
  restart: on-failure
  expose: 
  - "9000"

volumes:
  wordpress:
    driver: local # ici nous stockons le volume en local
    driver_opts:
    type: 'none' 									# aucun type spécifique
    o: 'bind'
    device: '/Users/stgerard/data/wordpress' 		#Ou stocker le dossier sur votre ordinateur en local
  mariadb:
    driver: local
    driver_opts:
    type: 'none' 
    o: 'bind'										 # Les Bind Mounts sont des volumes qui se montent sur un chemin d'accès à l'hôte, et ils peuvent être modifiés par d'autres processus en dehors de docker.
    device: '/Users/stgerard/data/mariadb'			#Ou stocker le dossier sur votre ordinateur en local
  
networks:
  inception:
  driver: bridge

# pour build:   docker-compose -f  <path_docker_compose> -d -build
# pour l'arreter:   docker-compose -f  <path_docker_compose> stop
# pour supprimer le build:  docker-compose -f  <path_docker_compose> down -v
# pour supprimer tous les comtainer:  docker system prune -af

